
services:

  ota_update:
    build: ./ota_update
    image: ota_update:1.0.0
    container_name: ota_update_service
      
    ports:
      - "5000:5000" 

    volumes:
     - D:/edgeConfig/config.json:/app/config/config.json:ro
     - D:/edgeConfig:/app/data
     - /var/run/docker.sock:/var/run/docker.sock       # Needed to manage containers from within container
    
    environment:
      - PYTHONUNBUFFERED=1
      - CONTAINER_NAME=ota_update_service
    
    restart: unless-stopped
    
  mqtt_eon-publisher:
    build: ./mqtt_eon
    image: mqtt-eon-service:1.0.0
    container_name: mqtt_eon_service
      
    ports:
      - "5001:5001" 

    volumes:
     - D:/edgeConfig/config.json:/app/config/config.json:ro
     - D:/edgeConfig:/app/data
    
    environment:
      - PYTHONUNBUFFERED=1
      - CONTAINER_NAME=mqtt_eon_service
    
    restart: unless-stopped


  mavlink-publisher:
    build: ./mavlink
    image: mavlink-service:1.0.0
    container_name: mavlink_service
    ports:
      - "5002:5002"
      - "14550:14550/udp"
    volumes:
     - D:/edgeConfig/config.json:/app/config/config.json:ro
     - D:/edgeConfig:/app/data
    environment:
      - PYTHONUNBUFFERED=1    
      - CONTAINER_NAME=mavlink_service  

    restart: unless-stopped    

  # portainer:
  #   image: portainer/portainer-ce:latest
  #   container_name: portainer
  #   restart: always
  #   ports:
  #     - "9000:9000" # Portainer UI (HTTPS)
  #     - "8000:8000" # Edge agent communications (optional)
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock # Access to Docker daemon
  #     # - portainer_data:/data # Persistent data for Portainer    


  grafana:
    image: grafana/grafana:latest
    container_name: grafana   
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      #- GF_INSTALL_PLUGINS= yesoreyeram-infinity-datasource


volumes:
  grafana-data:      